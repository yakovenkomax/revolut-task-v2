{"version":3,"sources":["constants/symbols.ts","components/FormattedCurrency/FormattedCurrency.tsx","components/Loader/Loader.tsx","constants/ids.ts","constants/text.ts","util/helpers.ts","components/ExchangeRate/ExchangeRate.tsx","components/Button/Button.tsx","components/CurrencyDisplay/CurrencyDisplay.tsx","components/CurrencySelector/CurrencySelector.tsx","components/ExchangeFrom/ExchangeFrom.tsx","components/ExchangeTo/ExchangeTo.tsx","constants/actions.ts","util/api.ts","actions/loaders.ts","actions/rates.ts","actions/wallet.ts","actions/form.ts","components/App/App.tsx","reducers/wallet.ts","reducers/rates.ts","reducers/form.ts","reducers/loaders.ts","reducers/index.ts","store.ts","index.tsx","components/ExchangeTo/ExchangeTo.module.css","components/App/App.module.css","components/Loader/Loader.module.css","components/CurrencyDisplay/CurrencyDisplay.module.css","components/Button/Button.module.css","components/ExchangeFrom/ExchangeFrom.module.css","components/ExchangeRate/ExchangeRate.module.css","components/CurrencySelector/CurrencySelector.module.css"],"names":["symbols","USD","GBP","EUR","FormattedCurrency","_this$props","this","props","currency","value","_this$props$precision","precision","symbol","formattedValue","toFixed","react_default","a","createElement","Fragment","React","PureComponent","Loader","react","className","s","root","bounce1","bounce2","bounce3","loaderIds","keymirror","RATES_UPDATE_LOADER","constants_text","isExchangeAvailable","_ref","currencyFrom","currencyTo","wallet","amount","rates","isValidRate","isValidAmount","walletAmount","lt","calculateRate","_ref2","rateFrom","rateTo","div","rate","Decimal","gt","ExchangeRate","inProgress","components_Loader_Loader","components_FormattedCurrency_FormattedCurrency","text","renderContent","connect","state","form","loaders","Button","type","disabled","buttonClassName","classNames","Object","defineProperty","CurrencyDisplay","CurrencySelector","onChange","index","item","_this","currencyList","_this$props2","selectedCurrency","startIndex","indexOf","react_alice_carousel_default","infinite","buttonsDisabled","mouseDragEnabled","keysControlDisabled","responsive","0","items","onSlideChanged","map","components_CurrencyDisplay_CurrencyDisplay","key","MAX_LENGTH","ExchangeFrom","contentEditable","createRef","handleCurrencySelect","focusInput","handleKeyDown","onAmountInput","event","onInput","target","test","length","parsedAmount","setState","forceUpdate","document","addEventListener","input","current","HTMLElement","activeElement","moveCaretToEnd","el","focus","window","getSelection","createRange","range","selectNodeContents","collapse","selection","removeAllRanges","addRange","keys","components_CurrencySelector_CurrencySelector","react_contenteditable_default","amountInput","html","innerRef","ExchangeTo","onCurrencySelect","mul","valueClassName","valueLong","valueFrom","valueTo","_this$props3","renderAmount","renderRates","actions","RATES_UPDATE","WALLET_EXCHANGE","FORM_UPDATE","LOADER_START","LOADER_STOP","fetchRates","asyncToGenerator","regenerator_default","mark","_callee","result","resultXML","resultObject","ratesObjectsArray","wrap","_context","prev","next","fetch","sent","convert","xml2js","elements","reduce","curr","attributes","abrupt","t0","console","error","stop","apply","arguments","startLoader","loaderId","payload","stopLoader","actions_rates","updateRates","dispatch","_rates","finish","_x","actions_wallet","exchangeCurrency","getState","actions_form","updateForm","App","ratesActions","handleCurrencyFromChange","exchangeActions","handleCurrencyToChange","handleAmountChange","handleSubmit","preventDefault","walletActions","setInterval","enabled","onSubmit","header","headerLeft","headerCenter","components_ExchangeRate_ExchangeRate","headerRight","components_Button_Button","main","components_ExchangeFrom_ExchangeFrom","components_ExchangeTo_ExchangeTo","FAKE_WALLET","initialWalletState","objectSpread","initialRatesState","initialFormState","initialLoadersState","rootReducer","combineReducers","newState","undefined","action","_action$payload","amountFrom","amountTo","minus","plus","initialState","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","StoreInstance","createStore","ReactDOM","render","es","store","components_App_App","getElementById","module","exports","bounce"],"mappings":"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","file":"static/js/main.70aaa118.chunk.js","sourcesContent":["type CurrencySymbolMap = {\n  [key in Currency]?: string;\n};\n\nexport const symbols: CurrencySymbolMap = {\n  USD: '$',\n  GBP: '£',\n  EUR: '€',\n};\n","import React from 'react';\nimport { symbols } from '../../constants/symbols';\nimport { Decimal } from 'decimal.js';\n\ninterface Props {\n  currency: Currency,\n  value: Decimal,\n  precision?: number,\n}\n\nclass FormattedCurrency extends React.PureComponent<Props> {\n  render() {\n    const { currency, value, precision = 2 } = this.props;\n\n    const symbol = symbols[currency];\n    const formattedValue = value.toFixed(precision);\n\n    return (\n      <React.Fragment>\n        { symbol }{ formattedValue }\n      </React.Fragment>\n    );\n  }\n}\n\nexport default FormattedCurrency;\n","import * as React from 'react';\n\nimport s from './Loader.module.css';\n\nclass Loader extends React.PureComponent {\n  render() {\n    return (\n      <div className={s.root}>\n        <div className={s.bounce1} />\n        <div className={s.bounce2} />\n        <div className={s.bounce3} />\n      </div>\n    );\n  }\n}\n\nexport default Loader;\n","import keymirror from 'keymirror';\n\nexport type LoaderId = 'RATES_UPDATE_LOADER';\n\nexport const loaderIds = keymirror({\n  RATES_UPDATE_LOADER: null,\n});\n","export default {\n  currencyDisplayPrefix: 'You have',\n  unavailablePlaceholder: 'Unavailable',\n  exchangeButtonText: 'Exchange',\n};\n","import { Decimal } from 'decimal.js';\n\ntype IsExchangeAvailable = (arg: {\n  currencyFrom: Currency,\n  currencyTo: Currency,\n  wallet: CurrencyMap,\n  amount: Decimal,\n  rates: CurrencyMap,\n}) => boolean;\n\nexport const isExchangeAvailable: IsExchangeAvailable = ({ currencyFrom, currencyTo, wallet, amount, rates }) => {\n  if (!isValidRate(rates[currencyFrom]) || !isValidRate(rates[currencyTo])) {\n    return false;\n  }\n\n  if (currencyFrom === currencyTo) {\n    return false;\n  }\n\n  if (!isValidAmount(amount)) {\n    return false;\n  }\n\n  const walletAmount = wallet[currencyFrom];\n  if (!walletAmount || walletAmount.lt(amount)) {\n    return false;\n  }\n\n  return true;\n};\n\ntype CalculateRate = (arg: {\n  currencyFrom: Currency,\n  currencyTo: Currency,\n  rates: CurrencyMap,\n}) => Decimal | void;\n\nexport const calculateRate: CalculateRate = ({ currencyFrom, currencyTo, rates }) => {\n  const rateFrom = rates[currencyFrom];\n  const rateTo = rates[currencyTo];\n\n  if (!isValidRate(rateFrom) || !isValidRate(rateTo)) {\n    return;\n  }\n\n  return rateTo.div(rateFrom);\n};\n\nexport const isValidRate = (rate: Decimal | void): rate is Decimal => {\n  return rate instanceof Decimal && rate.gt(0);\n};\n\nexport const isValidAmount = (amount: Decimal | void): amount is Decimal => {\n  return amount instanceof Decimal && amount.gt(0);\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport FormattedCurrency from '../FormattedCurrency/FormattedCurrency';\nimport Loader from '../Loader/Loader';\nimport { loaderIds } from '../../constants/ids';\nimport text from '../../constants/text';\n\nimport s from './ExchangeRate.module.css';\n\nimport { Decimal } from 'decimal.js';\nimport { calculateRate } from '../../util/helpers';\n\ninterface Props {\n  currencyFrom: Currency,\n  currencyTo: Currency,\n  inProgress: boolean | void,\n  rate: Decimal | void,\n}\n\nclass ExchangeRate extends React.PureComponent<Props> {\n  renderContent() {\n    const { currencyFrom, currencyTo, inProgress, rate } = this.props;\n\n    if (inProgress) {\n      return <Loader />;\n    }\n\n    if (!rate) {\n      return text.unavailablePlaceholder;\n    }\n\n    return (\n      <React.Fragment>\n        <FormattedCurrency currency={currencyFrom} value={new Decimal(1)} precision={0} />\n        {' = '}\n        <FormattedCurrency currency={currencyTo} value={rate} precision={4} />\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <div className={s.root}>\n        { this.renderContent() }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: AppState) => {\n  const { form, rates, loaders } = state;\n  const inProgress = loaders[loaderIds.RATES_UPDATE_LOADER];\n  const { currencyFrom, currencyTo } = form;\n  const rate = calculateRate({ currencyFrom, currencyTo, rates });\n\n  return {\n    currencyFrom,\n    currencyTo,\n    inProgress,\n    rate,\n  };\n};\n\nexport default connect(mapStateToProps)(ExchangeRate);\n","import React, { SyntheticEvent } from 'react';\nimport classNames from 'classnames';\n\nimport s from './Button.module.css';\n\ninterface Props {\n  type: string,\n  text: string,\n  disabled: boolean,\n}\n\nclass Button extends React.PureComponent<Props> {\n  render() {\n    const { type, disabled, text } = this.props;\n    const buttonClassName = classNames(s.root, { [s.disabled]: disabled });\n\n    return (\n      <button\n        className={buttonClassName}\n        type={type}\n        disabled={disabled}\n      >\n        { text }\n      </button>\n    );\n  }\n}\n\nexport default Button;\n","import React from 'react';\nimport FormattedCurrency from '../FormattedCurrency/FormattedCurrency';\nimport text from '../../constants/text';\n\nimport s from './CurrencyDisplay.module.css';\nimport { Decimal } from 'decimal.js';\n\ninterface Props {\n  currency: Currency,\n  value?: Decimal,\n}\n\nclass CurrencyDisplay extends React.PureComponent<Props> {\n  render() {\n    const { currency, value } = this.props;\n\n    if (!value) {\n      return null;\n    }\n\n    return (\n      <div className={s.root}>\n        <div className={s.currency}>\n          { currency }\n        </div>\n        <div className={s.wallet}>\n          { text.currencyDisplayPrefix }\n          { ' ' }\n          <FormattedCurrency currency={currency} value={value}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CurrencyDisplay;\n","import React from 'react';\nimport AliceCarousel from 'react-alice-carousel'\nimport 'react-alice-carousel/lib/alice-carousel.css'\nimport CurrencyDisplay from '../CurrencyDisplay/CurrencyDisplay';\n\nimport s from './CurrencySelector.module.css';\n\ninterface Props {\n  wallet: CurrencyMap,\n  currencyList: Array<Currency>,\n  selectedCurrency: Currency,\n  onChange: (arg: Currency) => void,\n}\n\nclass CurrencySelector extends React.PureComponent<Props> {\n  onChange = ({ item: index }: { item: number }) => {\n    const { onChange, currencyList } = this.props;\n\n    if (onChange) {\n      onChange(currencyList[index]);\n    }\n  };\n\n  render() {\n    const { currencyList, selectedCurrency, wallet } = this.props;\n    const startIndex = currencyList.indexOf(selectedCurrency);\n\n    return (\n      <div className={s.root}>\n        <AliceCarousel\n          infinite\n          buttonsDisabled\n          mouseDragEnabled\n          keysControlDisabled\n          startIndex={startIndex}\n          responsive={ {0: { items: 1 }} }\n          onSlideChanged={this.onChange}\n        >\n          { currencyList.map((currency) =>\n            <CurrencyDisplay key={currency} currency={currency} value={wallet[currency]}/>\n          )}\n        </AliceCarousel>\n      </div>\n    );\n  }\n}\n\nexport default CurrencySelector;\n","import React, { ChangeEvent, RefObject } from 'react';\nimport CurrencySelector from '../CurrencySelector/CurrencySelector';\nimport ContentEditable from 'react-contenteditable';\n\nimport s from './ExchangeFrom.module.css';\n\nimport { Decimal } from 'decimal.js';\n\nconst MAX_LENGTH = 6;\n\ninterface Props {\n  wallet: CurrencyMap,\n  amount: Decimal,\n  currencyFrom: Currency,\n  onInput: (arg: Decimal) => void,\n  onChange: (arg: Currency) => void,\n}\n\ninterface State {\n  amount: string,\n}\n\nclass ExchangeFrom extends React.PureComponent<Props, State> {\n  state = { amount: '' };\n  contentEditable: RefObject<HTMLElement> = React.createRef();\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.handleKeyDown);\n\n    this.focusInput();\n  }\n\n  handleCurrencySelect = (currencyFrom: Currency) => {\n    const { onChange } = this.props;\n\n    this.focusInput();\n\n    if (onChange) {\n      onChange(currencyFrom);\n    }\n  };\n\n  handleKeyDown = () => {\n    this.focusInput();\n  };\n\n  focusInput() {\n    const input = this.contentEditable.current;\n\n    if (!(input instanceof HTMLElement) || input === document.activeElement) {\n      return;\n    }\n\n    this.moveCaretToEnd(input);\n  }\n\n  moveCaretToEnd(el: HTMLElement) {\n    el.focus();\n    if (typeof window.getSelection !== 'undefined' && typeof document.createRange !== 'undefined') {\n      const range = document.createRange();\n\n      range.selectNodeContents(el);\n      range.collapse(false);\n\n      const selection = window.getSelection();\n\n      selection.removeAllRanges();\n      selection.addRange(range);\n    }\n  }\n\n  onAmountInput = (event: ChangeEvent<HTMLInputElement>) => {\n    const { onInput } = this.props;\n    const amount = event.target.value;\n    const isValid = /^[0-9.\\s]*$/.test(amount);\n\n    if (isValid && amount.length <= MAX_LENGTH) {\n      const parsedAmount = new Decimal(amount);\n      this.setState({ amount });\n\n      if (parsedAmount && onInput) {\n        onInput(parsedAmount);\n      }\n\n      if (amount === '' && onInput) {\n        onInput(new Decimal(0));\n      }\n    } else {\n      this.forceUpdate();\n    }\n  };\n\n  render() {\n    const { amount } = this.state;\n    const { currencyFrom, wallet } = this.props;\n    const currencyList = Object.keys(wallet) as Array<Currency>;\n\n    return (\n      <div className={s.root}>\n        <CurrencySelector\n          wallet={wallet}\n          currencyList={currencyList}\n          selectedCurrency={currencyFrom}\n          onChange={this.handleCurrencySelect}\n        />\n        <ContentEditable\n          className={s.amountInput}\n          html={amount}\n          innerRef={this.contentEditable}\n          onChange={this.onAmountInput}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ExchangeFrom;\n","import React from 'react';\nimport classNames from 'classnames';\nimport CurrencySelector from '../CurrencySelector/CurrencySelector';\nimport FormattedCurrency from '../FormattedCurrency/FormattedCurrency';\nimport { isValidAmount, isValidRate } from '../../util/helpers';\n\nimport s from './ExchangeTo.module.css';\nimport { Decimal } from 'decimal.js';\n\ninterface Props {\n  currencyFrom: Currency,\n  currencyTo: Currency,\n  inProgress: boolean | void,\n  wallet: CurrencyMap,\n  amount: Decimal,\n  rate?: Decimal | void,\n  onChange: (arg: Currency) => void,\n}\n\nclass ExchangeTo extends React.PureComponent<Props> {\n  onCurrencySelect = (currencyTo: Currency) => {\n    const { onChange } = this.props;\n\n    if (onChange) {\n      onChange(currencyTo);\n    }\n  };\n\n  renderAmount() {\n    const { amount, rate } = this.props;\n\n    if (!isValidRate(rate) || !isValidAmount(amount)) {\n      return (\n        <div className={s.value}/>\n      );\n    }\n\n    const value = amount.mul(rate).toFixed(2);\n    const valueClassName = classNames(s.value, {[s.valueLong]: value.length > 7});\n\n    return (\n      <div className={valueClassName}>\n        { value }\n      </div>\n    );\n  }\n\n  renderRates() {\n    const { currencyFrom, currencyTo, inProgress, rate } = this.props;\n\n    if (inProgress || !rate) {\n      return null;\n    }\n\n    const valueFrom = new Decimal(1);\n    const valueTo = new Decimal(1).div(rate);\n\n    return (\n      <div className={s.rate}>\n        <FormattedCurrency currency={currencyTo} value={valueFrom} precision={0} />\n        {' = '}\n        <FormattedCurrency currency={currencyFrom} value={valueTo} precision={2} />\n      </div>\n    );\n  }\n\n  render() {\n    const { currencyTo, wallet } = this.props;\n    const currencyList = Object.keys(wallet) as Array<Currency>;\n\n    return (\n      <div className={s.root}>\n        <CurrencySelector\n          wallet={wallet}\n          selectedCurrency={currencyTo}\n          currencyList={currencyList}\n          onChange={this.onCurrencySelect}\n        />\n        <div className={s.amount}>\n          { this.renderAmount() }\n          { this.renderRates() }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ExchangeTo;\n","import keymirror from 'keymirror';\n\nconst actions = keymirror({\n  RATES_UPDATE: null,\n  WALLET_EXCHANGE: null,\n  FORM_UPDATE: null,\n\n  LOADER_START: null,\n  LOADER_STOP: null,\n});\n\nexport default actions;\n","import convert from 'xml-js';\nimport { Decimal } from 'decimal.js';\n\ntype CurrencyElement = {\n  attributes: {\n    currency: Currency,\n    rate: Decimal,\n  }\n}\n\nexport const fetchRates = async () => {\n  try {\n    const result = await fetch('https://www.ecb.europa.eu/stats/eurofxref/eurofxref-daily.xml');\n    const resultXML = await result.text();\n    const resultObject = convert.xml2js(resultXML);\n    const ratesObjectsArray = resultObject.elements[0].elements[2].elements[0].elements;\n    const rates = ratesObjectsArray.reduce((prev: CurrencyMap, curr: CurrencyElement) => {\n      const key = curr.attributes.currency;\n      const value = curr.attributes.rate;\n\n      prev[key] = new Decimal(value);\n\n      return prev;\n    }, {});\n\n    return rates;\n  } catch(error) {\n    console.error(error);\n  }\n};\n","import actions from '../constants/actions';\nimport { LoaderId } from '../constants/ids';\n\nexport type StartLoaderAction = {\n  type: typeof actions.LOADER_START,\n  payload: {\n    loaderId: LoaderId,\n  },\n}\n\nexport type StopLoaderAction = {\n  type: typeof actions.LOADER_STOP,\n  payload: {\n    loaderId: LoaderId,\n  },\n}\n\n\nexport const startLoader = ({ loaderId }: { loaderId: LoaderId }): StartLoaderAction => {\n  return {\n    type: actions.LOADER_START,\n    payload: {\n      loaderId,\n    },\n  };\n};\n\nexport const stopLoader = ({ loaderId }: { loaderId: LoaderId }): StopLoaderAction => {\n  return {\n    type: actions.LOADER_STOP,\n    payload: {\n      loaderId,\n    },\n  };\n};\n","import actions from '../constants/actions';\nimport { loaderIds } from '../constants/ids';\nimport { fetchRates } from '../util/api';\nimport { startLoader, stopLoader } from './loaders';\n\nimport { Dispatch } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\n\nexport type UpdateRatesAction = {\n  type: typeof actions.RATES_UPDATE,\n  payload: {\n    rates: CurrencyMap,\n  },\n}\n\ntype UpdateRatesThunkAction = ThunkAction<void, AppState, null, UpdateRatesAction>;\n\nconst updateRates = (): UpdateRatesThunkAction => async (dispatch: Dispatch) => {\n  dispatch(startLoader({ loaderId: loaderIds.RATES_UPDATE_LOADER }));\n  try {\n    const rates = await fetchRates();\n\n    dispatch({\n      type: actions.RATES_UPDATE,\n      payload: {\n        rates,\n      },\n    });\n  } catch (error) {\n\n  } finally {\n    dispatch(stopLoader({ loaderId: loaderIds.RATES_UPDATE_LOADER }));\n  }\n};\n\nexport default {\n  updateRates,\n}\n","import actions from '../constants/actions';\nimport { Decimal } from 'decimal.js';\nimport { ThunkAction } from 'redux-thunk';\nimport { Dispatch } from 'redux';\nimport { calculateRate, isExchangeAvailable } from '../util/helpers';\n\nexport type ExchangeCurrencyAction = {\n  type: typeof actions.WALLET_EXCHANGE,\n  payload: {\n    currencyFrom: Currency,\n    currencyTo: Currency,\n    amount: Decimal,\n    rate: Decimal,\n  },\n}\n\ntype ExchangeCurrencyThunkAction = ThunkAction<void, AppState, null, ExchangeCurrencyAction>;\n\nconst exchangeCurrency = (): ExchangeCurrencyThunkAction => (dispatch: Dispatch, getState) => {\n  const state = getState();\n  const { form, rates, wallet } = state;\n  const { currencyFrom, currencyTo, amount } = form;\n  const rate = calculateRate({ currencyFrom, currencyTo, rates });\n  const available = isExchangeAvailable({ currencyFrom, currencyTo, wallet, amount, rates });\n\n  if (available) {\n    dispatch({\n      type: actions.WALLET_EXCHANGE,\n      payload: {\n        currencyFrom,\n        currencyTo,\n        amount,\n        rate,\n      },\n    });\n  }\n};\n\nexport default {\n  exchangeCurrency,\n}\n","import actions from '../constants/actions';\nimport { Decimal } from 'decimal.js';\n\ntype UpdateFormParamsType = {\n  currencyFrom?: Currency,\n  currencyTo?: Currency,\n  amount?: Decimal,\n}\n\nexport type UpdateFormAction = {\n  type: typeof actions.FORM_UPDATE,\n  payload: {\n    currencyFrom?: Currency,\n    currencyTo?: Currency,\n    amount?: Decimal,\n  }\n}\n\nconst updateForm = ({ currencyFrom, currencyTo, amount }: UpdateFormParamsType): UpdateFormAction => ({\n  type: actions.FORM_UPDATE,\n  payload: {\n    currencyFrom,\n    currencyTo,\n    amount,\n  },\n});\n\nexport default {\n  updateForm,\n}\n","import React, { SyntheticEvent } from 'react';\nimport { connect } from 'react-redux';\n\nimport ExchangeRate from '../ExchangeRate/ExchangeRate';\nimport Button from '../Button/Button';\nimport ExchangeFrom from '../ExchangeFrom/ExchangeFrom';\nimport ExchangeTo from '../ExchangeTo/ExchangeTo';\n\nimport ratesActions from '../../actions/rates';\nimport walletActions from '../../actions/wallet';\nimport exchangeActions from '../../actions/form';\n\nimport { calculateRate, isExchangeAvailable } from '../../util/helpers';\n\nimport text from '../../constants/text';\nimport { loaderIds } from '../../constants/ids';\n\nimport s from './App.module.css';\n\nimport { Decimal } from 'decimal.js';\nimport { ThunkDispatch } from 'redux-thunk';\n\nconst FETCH_INTERVAL = 10000; // ms\n\ninterface Props {\n  currencyFrom: Currency,\n  currencyTo: Currency,\n  inProgress: boolean | void,\n  enabled: boolean,\n  wallet: CurrencyMap,\n  amount: Decimal,\n  rate: Decimal | void,\n  dispatch: ThunkDispatch<AppState, null, AppAction>,\n}\n\nclass App extends React.PureComponent<Props> {\n  componentDidMount() {\n    this.updateRates();\n\n    setInterval(this.updateRates, FETCH_INTERVAL);\n  }\n\n  updateRates = () => {\n    this.props.dispatch(ratesActions.updateRates());\n  };\n\n  handleCurrencyFromChange = (currencyFrom: Currency) => {\n    this.props.dispatch(exchangeActions.updateForm({ currencyFrom }));\n  };\n\n  handleCurrencyToChange = (currencyTo: Currency) => {\n    this.props.dispatch(exchangeActions.updateForm({ currencyTo }));\n  };\n\n  handleAmountChange = (amount: Decimal) => {\n    this.props.dispatch(exchangeActions.updateForm({ amount }))\n  };\n\n  handleSubmit = (event: SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.props.dispatch(walletActions.exchangeCurrency());\n  };\n\n  render() {\n    const { currencyFrom, currencyTo, inProgress, enabled, wallet, amount, rate } = this.props;\n\n    return (\n      <form\n        className={s.root}\n        onSubmit={this.handleSubmit}\n      >\n        <header className={s.header}>\n          <div className={s.headerLeft}>\n          </div>\n          <div className={s.headerCenter}>\n            <ExchangeRate />\n          </div>\n          <div className={s.headerRight}>\n            <Button\n              type=\"submit\"\n              text={text.exchangeButtonText}\n              disabled={!enabled}\n            />\n          </div>\n        </header>\n        <main className={s.main}>\n          <ExchangeFrom\n            wallet={wallet}\n            amount={amount}\n            currencyFrom={currencyFrom}\n            onChange={this.handleCurrencyFromChange}\n            onInput={this.handleAmountChange}\n          />\n          <ExchangeTo\n            currencyFrom={currencyFrom}\n            currencyTo={currencyTo}\n            inProgress={inProgress}\n            wallet={wallet}\n            amount={amount}\n            rate={rate}\n            onChange={this.handleCurrencyToChange}\n          />\n        </main>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state: AppState) => {\n  const { form, wallet, rates, loaders } = state;\n  const { currencyFrom, currencyTo, amount } = form;\n  const inProgress = loaders[loaderIds.RATES_UPDATE_LOADER];\n  const rate = calculateRate({ currencyFrom, currencyTo, rates });\n  const enabled = isExchangeAvailable({ currencyFrom, currencyTo, wallet, amount, rates });\n\n  return {\n    currencyFrom,\n    currencyTo,\n    inProgress,\n    enabled,\n    wallet,\n    amount,\n    rate,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","import { Decimal } from 'decimal.js';\nimport actions from '../constants/actions';\n\nconst FAKE_WALLET: CurrencyMap = {\n  EUR: new Decimal(567.89),\n  GBP: new Decimal(876.5430),\n  USD: new Decimal(123.4),\n};\n\nexport const initialWalletState: CurrencyMap = {\n  EUR: new Decimal(0),\n  GBP: new Decimal(0),\n  USD: new Decimal(0),\n  ...FAKE_WALLET,\n};\n\nexport default (state = initialWalletState, action: AppAction) => {\n  let newState;\n\n  switch (action.type) {\n    case actions.WALLET_EXCHANGE: {\n      const { currencyFrom, currencyTo, amount, rate } = action.payload;\n\n      newState = { ...state };\n\n      const amountFrom = newState[currencyFrom] as Decimal;\n      const amountTo = newState[currencyTo] as Decimal;\n\n      newState[currencyFrom] = amountFrom.minus(amount);\n      newState[currencyTo] = amountTo.plus(amount.mul(rate));\n\n      return newState;\n    }\n\n    default:\n      return state;\n  }\n}\n","import actions from '../constants/actions';\nimport { Decimal } from 'decimal.js';\n\nexport const initialRatesState: CurrencyMap = {\n  EUR: new Decimal(1),\n};\n\nexport default (state = initialRatesState, action: AppAction) => {\n  switch (action.type) {\n    case actions.RATES_UPDATE: {\n      const { rates } = action.payload;\n\n      return {\n        ...state,\n        ...rates,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import { Decimal } from 'decimal.js';\nimport actions from '../constants/actions';\n\nexport const initialFormState = {\n  currencyFrom: 'EUR',\n  currencyTo: 'GBP',\n  amount: new Decimal(0),\n};\n\nexport default (state = initialFormState, action: AppAction) => {\n  let newState;\n\n  switch (action.type) {\n    case actions.FORM_UPDATE: {\n      const { currencyFrom, currencyTo, amount } = action.payload;\n\n      newState = { ...state };\n\n      if (currencyFrom) {\n        newState.currencyFrom = currencyFrom;\n      }\n\n      if (currencyTo) {\n        newState.currencyTo = currencyTo;\n      }\n\n      if (typeof amount !== 'undefined') {\n        newState.amount = new Decimal(amount);\n      }\n\n      return newState;\n    }\n\n    default:\n      return state;\n  }\n}\n","import actions from '../constants/actions';\nimport { loaderIds, LoaderId } from '../constants/ids';\n\ntype InitialLoadersState = {\n  [key in LoaderId]: boolean\n}\n\nexport const initialLoadersState: InitialLoadersState = Object.keys(loaderIds).reduce((state, loaderId) => {\n  return {\n    ...state,\n    [loaderId]: false,\n  };\n}, {} as InitialLoadersState);\n\nexport default (state = initialLoadersState, action: AppAction) => {\n  switch (action.type) {\n    case actions.LOADER_START: {\n      const { loaderId } = action.payload;\n\n      if (state[loaderId]) {\n        return state;\n      }\n\n      return {\n        ...state,\n        [loaderId]: true,\n      };\n    }\n\n    case actions.LOADER_STOP: {\n      const { loaderId } = action.payload;\n\n      if (!state[loaderId]) {\n        return state;\n      }\n\n      return {\n        ...state,\n        [loaderId]: false,\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n","import { combineReducers } from 'redux';\nimport wallet from './wallet';\nimport rates from './rates';\nimport form from './form';\nimport loaders from './loaders';\n\nconst rootReducer = combineReducers({\n  wallet,\n  rates,\n  form,\n  loaders,\n});\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk, { ThunkMiddleware } from 'redux-thunk';\nimport rootReducer from './reducers';\nimport { initialWalletState } from './reducers/wallet';\nimport { initialRatesState } from './reducers/rates';\nimport { initialFormState } from './reducers/form';\nimport { initialLoadersState } from './reducers/loaders';\n\nconst initialState: AppState = {\n  wallet: initialWalletState,\n  rates: initialRatesState,\n  form: initialFormState,\n  loaders: initialLoadersState,\n};\n\nconst composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst enhancer = composeEnhancers(\n  applyMiddleware(thunk as ThunkMiddleware<AppState, AppAction>),\n);\n\nexport default() => {\n  return createStore(\n    rootReducer,\n    initialState,\n    enhancer,\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport { Provider } from 'react-redux';\nimport Store from './store';\nimport './index.css';\n\nconst StoreInstance = Store();\n\nReactDOM.render(\n  <Provider store={StoreInstance}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ExchangeTo_root__qUaiz\",\"amount\":\"ExchangeTo_amount__3Tu1g\",\"value\":\"ExchangeTo_value__3SjI2\",\"valueLong\":\"ExchangeTo_valueLong__1NPtn\",\"rate\":\"ExchangeTo_rate__nIxe0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__1nDjN\",\"header\":\"App_header__3U-gB\",\"headerLeft\":\"App_headerLeft__cFFdv\",\"headerCenter\":\"App_headerCenter__3yw3r\",\"headerRight\":\"App_headerRight__1dPFj\",\"main\":\"App_main__1ZmMF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Loader_root__3ryVv\",\"bounce1\":\"Loader_bounce1__sdI3_\",\"bounce2\":\"Loader_bounce2__3vdAd\",\"bounce3\":\"Loader_bounce3__GT_0_\",\"bounce\":\"Loader_bounce__YmQtY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CurrencyDisplay_root__34vox\",\"currency\":\"CurrencyDisplay_currency__1Z2vd\",\"wallet\":\"CurrencyDisplay_wallet__25GJp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Button_root__26xsm\",\"disabled\":\"Button_disabled__2i_Ff\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ExchangeFrom_root__2zVQv\",\"amountInput\":\"ExchangeFrom_amountInput__37RoF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ExchangeRate_root__NC2uk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CurrencySelector_root__KUtB6\"};"],"sourceRoot":""}